---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Globos Sexo | Official Website">
  <main>
    <div class="landing">
      <form class="file-upload-form">
        <label for="file" class="file-upload-label">
          <div class="file-upload-design">
            <svg
              width="46px"
              height="46px"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
              color="#ffffff"
            >
              <path
                d="M21 3.6V20.4C21 20.7314 20.7314 21 20.4 21H3.6C3.26863 21 3 20.7314 3 20.4V3.6C3 3.26863 3.26863 3 3.6 3H20.4C20.7314 3 21 3.26863 21 3.6Z"
                stroke="#ffffff"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
              <path
                d="M3 16L10 13L21 18"
                stroke="#ffffff"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
              <path
                d="M16 10C14.8954 10 14 9.10457 14 8C14 6.89543 14.8954 6 16 6C17.1046 6 18 6.89543 18 8C18 9.10457 17.1046 10 16 10Z"
                stroke="#ffffff"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </svg>
            <p>Drag and Drop</p>
            <span class="browse-button">Browse file</span>
          </div>
          <input id="file" type="file" />
        </label>
      </form>
      <div class="icon_separator">
        <svg
          width="46px"
          height="46px"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
          color="#ffffff"
        >
          <path
            d="M4 14C2.89543 14 2 13.1046 2 12C2 10.8954 2.89543 10 4 10C5.10457 10 6 10.8954 6 12C6 13.1046 5.10457 14 4 14Z"
            stroke="#ffffff"
            stroke-width="1.5"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
          <path
            d="M9 12H22M22 12L19 9M22 12L19 15"
            stroke="#ffffff"
            stroke-width="1.5"
            stroke-linecap="round"
            stroke-linejoin="round"></path>
        </svg>
      </div>
      <div class="bubble-output">
        <img
          src="https://japi.rest/discord/v1/user/1149804799877972059/avatar?1705419878647"
          alt="bubble"
          width="100px"
          height="100px"
        />
      </div>
    </div>
    <p class="tip">Tip: Click on the image to download</p>
  </main>
</Layout>
<style>
  main {
    height: 100vh;
  }
  .landing {
    display: flex;
    align-items: center;
    flex-direction: row;
    justify-content: space-evenly;
    height: 95%;
  }
  .tip {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 5%;
    color: var(--text-color);
    text-align: center;
    width: 100%;
  }
  .file-upload-form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: var(--component-background);
    border: 1px solid var(--border-color);
    border-radius: 0.3rem;
    height: 230px;
    width: 250px;
  }
  .file-upload-label {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
  }
  .file-upload-design {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: #333;
    width: 100%;
    gap: 0.5rem;
  }
  .file-upload-design svg {
    width: 34px;
    height: 34px;
  }
  .file-upload-design p {
    margin: 0;
    color: #cfcfcf;
  }
  .browse-button {
    background-color: var(--component-background);
    border: 1px solid var(--border-color);
    border-radius: 0.3rem;
    padding: 0.5rem 1rem;
    margin-top: 0.5rem;
    transition: 300ms;
    color: #cfcfcf;
    cursor: pointer;
  }
  .browse-button:hover {
    background-color: #141414fb;
  }
  .file-upload-label input {
    display: none;
  }
  .bubble-output {
    display: flex;
    justify-content: center;
    align-items: center;

    height: 230px;
    width: 250px;
  }
  .bubble-output img {
    border-radius: 5%;
    object-fit: contain;
    height: 100%;
    width: 100%;
  }

  @media screen and (max-width: 768px) {
    .landing {
      flex-direction: column;
    }
    .icon_separator {
      rotate: 90deg;
    }
  }
</style>
<style>
  main {
    height: 100vh;
  }
  .landing {
    display: flex;
    align-items: center;
    flex-direction: row;
    justify-content: space-evenly;
    height: 95%;
  }
  .tip {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 5%;
    color: var(--border-color);
    text-align: center;
    width: 100%;
  }
  .file-upload-form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: var(--component-background);
    border: 1px solid var(--border-color);
    border-radius: 0.3rem;
    height: 230px;
    width: 250px;
  }
  .file-upload-label {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
  }
  .file-upload-design {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: #333;
    width: 100%;
    gap: 0.5rem;
  }
  .file-upload-design svg {
    width: 34px;
    height: 34px;
  }
  .file-upload-design p {
    margin: 0;
    color: #cfcfcf;
  }
  .browse-button {
    background-color: var(--component-background);
    border: 1px solid var(--border-color);
    border-radius: 0.3rem;
    padding: 0.5rem 1rem;
    margin-top: 0.5rem;
    transition: 300ms;
    color: #cfcfcf;
    cursor: pointer;
  }
  .browse-button:hover {
    background-color: #141414fb;
  }
  .file-upload-label input {
    display: none;
  }
  .bubble-output {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 230px;
    width: 250px;
  }
  .bubble-output img {
    border-radius: 5%;
    object-fit: contain;
    height: 100%;
    width: 100%;
  }
  @media screen and (max-width: 768px) {
    .landing {
      flex-direction: column;
    }
    .icon_separator {
      rotate: 90deg;
    }
  }
</style>
<script>
  import { createCanvas, loadImage } from "@napi-rs/canvas";

const fileInput = document.getElementById("file");
const bubbleOutput = document.querySelector(".bubble-output img");

fileInput?.addEventListener("change", async (e) => {
  const file = (e?.target as HTMLInputElement)?.files?.[0];
  if (file) {
    const reader = new FileReader();
    reader.onload = async (e) => {
      if (e?.target?.result) {
        await processImage(e.target.result);
      }
    };
    reader.readAsDataURL(file);
  }
});

bubbleOutput?.addEventListener("click", (e) => {
  const src = (e?.target as HTMLImageElement)?.src;
  if (src) {
    const a = document.createElement("a");
    a.href = src;
    a.download = "bubble.png";
    a.click();
  }
});

document.addEventListener("paste", (e) => {
  const items = e?.clipboardData?.items;
  if (!items) return;
  for (let i = 0; i < items.length; i++) {
    if (items[i].type.includes("image")) {
      const blob = items[i].getAsFile();
      const reader = new FileReader();
      reader.onload = async (e) => {
        if (e?.target?.result) {
          await processImage(e.target.result);
        }
      };
      if (blob) {
        reader.readAsDataURL(blob);
      }
      break;
    }
  }
});

const form = document.querySelector(".file-upload-form");
if (form) {
  form.addEventListener("dragover", (e) => {
    e.preventDefault();
  });
  form.addEventListener("drop", (e) => {
    e.preventDefault();
    const file = (e as DragEvent)?.dataTransfer?.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = async (e) => {
        if (e?.target?.result) {
          await processImage(e.target.result);
        }
      };
      reader.readAsDataURL(file);
    }
  });
}

const processImage = async (imageData: string | ArrayBuffer) => {
  const image = await loadImage(imageData);
  const overlay = await loadImage("./Bubble.svg");
  const overlayHeight = image.height * 0.3;
  const canvas = createCanvas(image.width, image.height);
  const ctx = canvas.getContext("2d");
  ctx.drawImage(image, 0, 0, image.width, image.height);
  ctx.globalCompositeOperation = "destination-out";
  ctx.drawImage(overlay, 0, 0, image.width, overlayHeight);
  bubbleOutput?.setAttribute("src", canvas.toDataURL());
  return canvas.toDataURL();
};

</script>
